name: Test and release
on:
  push:

jobs:
  unit_test:
    name: Unit Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: pnpm/action-setup@v2
        with:
          version: latest
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "lts/*"
          cache: "pnpm"
      - name: Install dependencies
        run: pnpm install
      - name: Run unit tests
        run: pnpm run test:coverage
      - name: Upload to MyCoverage
        uses: serialexp/mycoverage-action@v1
        with:
          endpoint: https://mycoverage.se1.serial-experiments.com/
  sonarqube:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./
    services:
      sonarqube:
        image: sonarqube
        ports:
          - 9000:9000
    env:
      NODE_OPTIONS: "--max-old-space-size=5384"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: pnpm/action-setup@v3
        with:
          version: latest
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"
          cache: "pnpm"
      - name: Wait a bit for service to come up
        run: sleep 60
      - uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: "21"
      - name: Check index
        run: wget -qO- http://localhost:9000/batch/index
      - name: Run Sonarqube
        run: pnpx sonar-scanner -X -Dsonar.host.url=http://localhost:9000/ -Dsonar.login=admin -Dsonar.password=admin -Dsonar.projectKey=project
      - name: Upload sonarqube results to MyCoverage
        uses: serialexp/mycoverage-action@v2
        with:
          endpoint: https://mycoverage.se1.serial-experiments.com/
          kind: sonarqube
          sonarqubeServer: http://localhost:9000/
          sonarqubeLogin: admin
          sonarqubePassword: admin
      - name: Upload changefrequency to MyCoverage
        uses: serialexp/mycoverage-action@v2
        with:
          endpoint: https://mycoverage.se1.serial-experiments.com/
          kind: changefrequency
  typescript:
    name: Typescript
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: pnpm/action-setup@v2
        with:
          version: latest
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "lts/*"
          cache: "pnpm"
      - name: Install dependencies
        run: pnpm install && node_modules/.bin/prisma generate
      - name: Run typescript
        run: pnpm run test:tsc
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: pnpm/action-setup@v2
        with:
          version: latest
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "lts/*"
          cache: "pnpm"
      - name: Install dependencies
        run: pnpm install
      - name: Run Biome
        run: pnpm run check
  release:
    name: Release
    if: "!contains(github.event.head_commit.message , '[skip release]') && github.ref == 'refs/heads/master'"
    needs: [unit_test, typescript]
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: mysql://localhost
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: pnpm/action-setup@v2
        with:
          version: latest
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "lts/*"
          cache: "pnpm"
      - name: Install dependencies
        run: pnpm install
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          DOCKER_REGISTRY_USER: ${{ secrets.DOCKER_REGISTRY_USER }}
          DOCKER_REGISTRY_PASSWORD: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}
        run: pnpx semantic-release
